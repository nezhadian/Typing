<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="PrimaryColor">#0EBE5A</SolidColorBrush>
    <SolidColorBrush x:Key="TextColor">#FFF</SolidColorBrush>
    
    <!--Main Menu Primary Buttons-->
    <CornerRadius x:Key="MainMenu.CTAButton.CornerRadius">10</CornerRadius>
    <SolidColorBrush x:Key="MainMenu.CTAButton.Hover">#0BDB65</SolidColorBrush>
    <SolidColorBrush x:Key="MainMenu.CTAButton.Pressed">#0E9A4A</SolidColorBrush>
    <Style x:Key="MainMenu.CTAButton.Style" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource MainMenu.CTAButton.CornerRadius}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainMenu.CTAButton.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainMenu.CTAButton.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Main Menu Secondary Buttons-->

    <SolidColorBrush x:Key="MainMenu.SecondButton.Normal">#B5FFD5</SolidColorBrush>
    <SolidColorBrush x:Key="MainMenu.SecondButton.Text">#005324</SolidColorBrush>
    <SolidColorBrush x:Key="MainMenu.SecondButton.Hover">#A4FFCB</SolidColorBrush>
    <SolidColorBrush x:Key="MainMenu.SecondButton.Pressed">#7FF8B3</SolidColorBrush>
    <Style x:Key="MainMenu.SecondButton.Style" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource MainMenu.SecondButton.Normal}" />
        <Setter Property="Foreground" Value="{DynamicResource MainMenu.SecondButton.Text}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource MainMenu.CTAButton.CornerRadius}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainMenu.SecondButton.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainMenu.SecondButton.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Main Frame Container-->
    <SolidColorBrush x:Key="Frame.BackButton.Hover">#EEEBEB</SolidColorBrush>
    <SolidColorBrush x:Key="Frame.BackButton.Pressed">#D1D1D1</SolidColorBrush>
    <Style x:Key="FrameBackButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="18" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Frame.BackButton.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Frame.BackButton.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    <Style x:Key="MainFrameStyle" TargetType="Frame">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Frame">
                    <Grid>
                        <ContentPresenter x:Name="PART_FrameCP" />
                        <Button x:Name="backBtn" Style="{StaticResource FrameBackButtonStyle}" Content="{StaticResource arrowBack}" HorizontalAlignment="Left" VerticalAlignment="Top" Command="NavigationCommands.BrowseBack" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanGoBack" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="backBtn"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Pages Styles-->
    <SolidColorBrush x:Key="Pages.TitleText">#009A42</SolidColorBrush>
    <Style x:Key="TitledPageStyle" TargetType="Page" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Page">
                    <Grid>
                        <ContentPresenter />
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Height="50">
                            <TextBlock 
                                FontFamily="Poppins"
                                FontSize="16"
                                FontWeight="Bold"
                                Foreground="{DynamicResource Pages.TitleText}"
                                Text="{TemplateBinding Title}" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Pause Play Button-->
    <SolidColorBrush x:Key="FreeMode.WPMText.TextColor">#00FF6F</SolidColorBrush>
    <SolidColorBrush x:Key="FreeMode.Timer.TextColor">#00672D</SolidColorBrush>
    <SolidColorBrush x:Key="FreeMode.PausePlayButtom.Color">#00672D</SolidColorBrush>
    <Style x:Key="FreeMode.PausePlayButton.Style" TargetType="ToggleButton">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="{StaticResource play}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Content" Value="{StaticResource pause}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--FreeMode Main Line Style-->
    <SolidColorBrush x:Key="FreeMode.MainLine.CorrectColor">#333</SolidColorBrush>
    <SolidColorBrush x:Key="FreeMode.MainLine.MistakeColor">#ff0000</SolidColorBrush>
    <Style x:Key="FreeMode.MainLine.BaseStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextAlignment" Value="Left" />
    </Style>
    <Style x:Key="FreeMode.MainLine.Correct" TargetType="Run">
        <Setter Property="Foreground" Value="{DynamicResource FreeMode.MainLine.CorrectColor}" />
    </Style>
    <Style x:Key="FreeMode.MainLine.Mistake" TargetType="Underline">
        <Setter Property="Foreground" Value="{DynamicResource FreeMode.MainLine.MistakeColor}" />
    </Style>
    
    <!--Free Mode Preview Text Style-->
    <SolidColorBrush x:Key="FreeMode.MainLine.PreviewColor">#ccc</SolidColorBrush>
    <SolidColorBrush x:Key="FreeMode.MainLine.CaretBorder">#ccc</SolidColorBrush>
    <SolidColorBrush x:Key="FreeMode.MainLine.CaretBg">#eee</SolidColorBrush>
    
    <Style x:Key="FreeMode.MainLine.Preview" TargetType="TextBlock" BasedOn="{StaticResource FreeMode.MainLine.BaseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource FreeMode.MainLine.PreviewColor}" />
    </Style>
    <Style x:Key="FreeMode.MainLine.Caret" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource FreeMode.MainLine.CaretBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource FreeMode.MainLine.CaretBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="1" />
    </Style>

    <!--FreeMode Previsly Typed Text Style-->
    <Style x:Key="FreeMode.TypedText.DefaultStyle" TargetType="TextBlock" BasedOn="{StaticResource FreeMode.MainLine.BaseStyle}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>
    
    <!--CTA Button-->
    <SolidColorBrush x:Key="Main.CTAButton.Primary">#0EBE5A</SolidColorBrush>
    <SolidColorBrush x:Key="Main.CTAButton.Hover">#10D264</SolidColorBrush>
    <SolidColorBrush x:Key="Main.CTAButton.Pressed">#0DAA50</SolidColorBrush> 
    <SolidColorBrush x:Key="Main.CTAButton.Text">#FFF</SolidColorBrush>

    <Style x:Key="Main.CTAButton" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Poppins" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Padding" Value="40,0" />
        <Setter Property="Background" Value="{DynamicResource Main.CTAButton.Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource Main.CTAButton.Text}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="25">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Main.CTAButton.Hover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Main.CTAButton.Pressed}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Secondary Button-->
    <SolidColorBrush x:Key="Main.SecondaryButton.Primary">#0EBE5A</SolidColorBrush>
    <SolidColorBrush x:Key="Main.SecondaryButton.Text">#0EBE5A</SolidColorBrush>
    <SolidColorBrush x:Key="Main.SecondaryButton.Border">#0EBE5A</SolidColorBrush>

    <SolidColorBrush x:Key="Main.SecondaryButton.Hover">#B8FFD7</SolidColorBrush>
    <SolidColorBrush x:Key="Main.SecondaryButton.HoverText">#0EBE5A</SolidColorBrush>
    <SolidColorBrush x:Key="Main.SecondaryButton.Pressed">#A2E3BE</SolidColorBrush>
    <Style x:Key="Main.SecondaryButton" TargetType="Button" BasedOn="{StaticResource Main.CTAButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Main.SecondaryButton.Text}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Main.SecondaryButton.Border}" />
        <Setter Property="BorderThickness" Value="2" />
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Main.SecondaryButton.Hover}" />
                <Setter Property="Foreground" Value="{DynamicResource Main.SecondaryButton.HoverText}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Main.SecondaryButton.Pressed}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>